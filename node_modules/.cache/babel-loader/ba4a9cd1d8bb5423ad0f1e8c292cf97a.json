{"remainingRequest":"/Users/kwonki/Documents/donuts-noticeAdmin/node_modules/babel-loader/lib/index.js!/Users/kwonki/Documents/donuts-noticeAdmin/node_modules/eslint-loader/index.js??ref--13-0!/Users/kwonki/Documents/donuts-noticeAdmin/src/api/index.js","dependencies":[{"path":"/Users/kwonki/Documents/donuts-noticeAdmin/src/api/index.js","mtime":1585632090632},{"path":"/Users/kwonki/Documents/donuts-noticeAdmin/node_modules/cache-loader/dist/cjs.js","mtime":1585548610546},{"path":"/Users/kwonki/Documents/donuts-noticeAdmin/node_modules/babel-loader/lib/index.js","mtime":1585548610441},{"path":"/Users/kwonki/Documents/donuts-noticeAdmin/node_modules/eslint-loader/index.js","mtime":1585549288966}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKdmFyIGluc3RhbmNlID0gYXhpb3MuY3JlYXRlKHsKICBiYXNlVVJMOiAiaHR0cDovLzE5Mi4xNjguMC40NDo4MDgxLyIKfSk7CmV4cG9ydCB2YXIgc3VibWl0V29JbWcgPSB7CiAgbGlzdDogZnVuY3Rpb24gbGlzdChib2R5Rm9ybURhdGEpIHsKICAgIC8vIHZhciBib2R5Rm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgIC8vIGJvZHlGb3JtRGF0YS5zZXQoJ3RpdGxlJywgdGl0bGUpCiAgICAvLyBib2R5Rm9ybURhdGEuc2V0KCdub3RpY2VUeXBlJywgdHlwZSkKICAgIC8vIGJvZHlGb3JtRGF0YS5zZXQoJ3R0cycsIHR0cykKICAgIHJldHVybiBpbnN0YW5jZS5nZXQoJ2FwaS9ub3RpY2UvaW5zZXJ0JywgYm9keUZvcm1EYXRhKTsKICB9Cn07CmV4cG9ydCB2YXIgc3VibWl0V0ltZyA9IHsKICBsaXN0OiBmdW5jdGlvbiBsaXN0KHRpdGxlLCB0eXBlLCBpbWcsIHR0cykgewogICAgY29uc29sZS5sb2codGl0bGUsIHR5cGUsIHR0cyk7CiAgICB2YXIgYm9keUZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICBib2R5Rm9ybURhdGEuc2V0KCd0aXRsZScsIHRpdGxlKTsKICAgIGJvZHlGb3JtRGF0YS5zZXQoJ25vdGljZVR5cGUnLCB0eXBlKTsKICAgIGJvZHlGb3JtRGF0YS5zZXQoJ2Rvd25sb2FkRmlsZScsIGltZyk7CiAgICBib2R5Rm9ybURhdGEuc2V0KCd0dHMnLCB0dHMpOwogICAgcmV0dXJuIGluc3RhbmNlLnBvc3QoJ2FwaS9ub3RpY2UvaW5zZXJ0JywgYm9keUZvcm1EYXRhKTsKICB9Cn07CmV4cG9ydCB2YXIgbGlzdHNQYWdlID0gewogIGxpc3Q6IGZ1bmN0aW9uIGxpc3QoYm9keUZvcm1EYXRhKSB7CiAgICAvLyBsaXN0KHBhZ2VOdW0pewogICAgLy8gY29uc3QgYm9keUZvcm1EYXRhID0gbmV3IEZvcm1EYXRhCiAgICAvLyBib2R5Rm9ybURhdGEuc2V0KCJyZXF1ZXN0UGFnZSIsIHBhZ2VOdW0pCiAgICAvLyBjb25zb2xlLmxvZygibnVtIiwgcGFnZU51bSkKICAgIHJldHVybiBpbnN0YW5jZS5wb3N0KCJhcGkvbm90aWNlL2xpc3QiLCBib2R5Rm9ybURhdGEpOwogIH0KfTs="},{"version":3,"sources":["/Users/kwonki/Documents/donuts-noticeAdmin/src/api/index.js"],"names":["axios","instance","create","baseURL","submitWoImg","list","bodyFormData","get","submitWImg","title","type","img","tts","console","log","FormData","set","post","listsPage"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE;AADiB,CAAb,CAAjB;AAIA,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,IADuB,gBAClBC,YADkB,EACJ;AACf;AACA;AACA;AACA;AACA,WAAOL,QAAQ,CAACM,GAAT,CAAa,mBAAb,EAAkCD,YAAlC,CAAP;AACH;AAPsB,CAApB;AAUP,OAAO,IAAME,UAAU,GAAG;AACtBH,EAAAA,IADsB,gBACjBI,KADiB,EACVC,IADU,EACJC,GADI,EACCC,GADD,EACM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAmBC,IAAnB,EAAyBE,GAAzB;AACA,QAAIN,YAAY,GAAG,IAAIS,QAAJ,EAAnB;AACAT,IAAAA,YAAY,CAACU,GAAb,CAAiB,OAAjB,EAA0BP,KAA1B;AACAH,IAAAA,YAAY,CAACU,GAAb,CAAiB,YAAjB,EAA+BN,IAA/B;AACAJ,IAAAA,YAAY,CAACU,GAAb,CAAiB,cAAjB,EAAiCL,GAAjC;AACAL,IAAAA,YAAY,CAACU,GAAb,CAAiB,KAAjB,EAAwBJ,GAAxB;AACA,WAAOX,QAAQ,CAACgB,IAAT,CAAc,mBAAd,EAAmCX,YAAnC,CAAP;AACH;AATqB,CAAnB;AAeP,OAAO,IAAMY,SAAS,GAAE;AACpBb,EAAAA,IADoB,gBACfC,YADe,EACF;AAClB;AACI;AACA;AACA;AACA,WAAOL,QAAQ,CAACgB,IAAT,CAAc,iBAAd,EAAiCX,YAAjC,CAAP;AACH;AAPmB,CAAjB","sourcesContent":["import axios from 'axios'\nconst instance = axios.create({\n    baseURL: \"http://192.168.0.44:8081/\",\n});\n\nexport const submitWoImg = {\n    list(bodyFormData) {\n        // var bodyFormData = new FormData();\n        // bodyFormData.set('title', title)\n        // bodyFormData.set('noticeType', type)\n        // bodyFormData.set('tts', tts)\n        return instance.get('api/notice/insert', bodyFormData)\n    }\n}\n\nexport const submitWImg = {\n    list(title, type, img, tts) {\n        console.log(title, type, tts)\n        var bodyFormData = new FormData();\n        bodyFormData.set('title', title)\n        bodyFormData.set('noticeType', type)\n        bodyFormData.set('downloadFile', img)\n        bodyFormData.set('tts', tts)\n        return instance.post('api/notice/insert', bodyFormData)\n    }\n}\n\n\n\n\nexport const listsPage ={\n    list(bodyFormData){\n    // list(pageNum){\n        // const bodyFormData = new FormData\n        // bodyFormData.set(\"requestPage\", pageNum)\n        // console.log(\"num\", pageNum)\n        return instance.post(\"api/notice/list\", bodyFormData)\n    }\n}\n\n\n"]}]}