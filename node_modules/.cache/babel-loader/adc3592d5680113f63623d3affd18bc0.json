{"remainingRequest":"/Users/dasoljong/Desktop/Projects/Donuts/udition-final/node_modules/babel-loader/lib/index.js!/Users/dasoljong/Desktop/Projects/Donuts/udition-final/node_modules/eslint-loader/index.js??ref--13-0!/Users/dasoljong/Desktop/Projects/Donuts/udition-final/src/api/index.js","dependencies":[{"path":"/Users/dasoljong/Desktop/Projects/Donuts/udition-final/src/api/index.js","mtime":1585720910741},{"path":"/Users/dasoljong/Desktop/Projects/Donuts/udition-final/node_modules/cache-loader/dist/cjs.js","mtime":1585539844102},{"path":"/Users/dasoljong/Desktop/Projects/Donuts/udition-final/node_modules/babel-loader/lib/index.js","mtime":1585539844007},{"path":"/Users/dasoljong/Desktop/Projects/Donuts/udition-final/node_modules/eslint-loader/index.js","mtime":1585624219768}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKdmFyIGluc3RhbmNlID0gYXhpb3MuY3JlYXRlKHsKICBiYXNlVVJMOiAiaHR0cDovLzE5Mi4xNjguMC40NDo4MDgxLyIKfSk7CmV4cG9ydCB2YXIgc3VibWl0V29JbWcgPSB7CiAgbGlzdDogZnVuY3Rpb24gbGlzdChib2R5Rm9ybURhdGEpIHsKICAgIC8vIHZhciBib2R5Rm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgIC8vIGJvZHlGb3JtRGF0YS5zZXQoJ3RpdGxlJywgdGl0bGUpCiAgICAvLyBib2R5Rm9ybURhdGEuc2V0KCdub3RpY2VUeXBlJywgdHlwZSkKICAgIC8vIGJvZHlGb3JtRGF0YS5zZXQoJ3R0cycsIHR0cykKICAgIGNvbnNvbGUubG9nKGJvZHlGb3JtRGF0YSk7CiAgICByZXR1cm4gaW5zdGFuY2UuZ2V0KCdhcGkvbm90aWNlL2luc2VydCcsIGJvZHlGb3JtRGF0YSk7CiAgfQp9OwpleHBvcnQgdmFyIHN1Ym1pdFdJbWcgPSB7CiAgbGlzdDogZnVuY3Rpb24gbGlzdCh0aXRsZSwgdHlwZSwgaW1nLCB0dHMpIHsKICAgIGNvbnNvbGUubG9nKHRpdGxlLCB0eXBlLCB0dHMpOwogICAgdmFyIGJvZHlGb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgYm9keUZvcm1EYXRhLnNldCgndGl0bGUnLCB0aXRsZSk7CiAgICBib2R5Rm9ybURhdGEuc2V0KCdub3RpY2VUeXBlJywgdHlwZSk7CiAgICBib2R5Rm9ybURhdGEuc2V0KCdkb3dubG9hZEZpbGUnLCBpbWcpOwogICAgYm9keUZvcm1EYXRhLnNldCgndHRzJywgdHRzKTsKICAgIHJldHVybiBpbnN0YW5jZS5wb3N0KCdhcGkvbm90aWNlL2luc2VydCcsIGJvZHlGb3JtRGF0YSk7CiAgfQp9OwpleHBvcnQgdmFyIGxpc3RzUGFnZSA9IHsKICBsaXN0OiBmdW5jdGlvbiBsaXN0KGJvZHlGb3JtRGF0YSkgewogICAgLy8gbGlzdChwYWdlTnVtKXsKICAgIC8vIGNvbnN0IGJvZHlGb3JtRGF0YSA9IG5ldyBGb3JtRGF0YQogICAgLy8gYm9keUZvcm1EYXRhLnNldCgicmVxdWVzdFBhZ2UiLCBwYWdlTnVtKQogICAgLy8gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGUKICAgIC8vIGNvbnNvbGUubG9nKCJudW0iLCBwYWdlTnVtKQogICAgcmV0dXJuIGluc3RhbmNlLnBvc3QoImFwaS9ub3RpY2UvbGlzdCIsIGJvZHlGb3JtRGF0YSk7CiAgfQp9Ow=="},{"version":3,"sources":["/Users/dasoljong/Desktop/Projects/Donuts/udition-final/src/api/index.js"],"names":["axios","instance","create","baseURL","submitWoImg","list","bodyFormData","console","log","get","submitWImg","title","type","img","tts","FormData","set","post","listsPage"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE;AADiB,CAAb,CAAjB;AAIA,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,IADuB,gBAClBC,YADkB,EACJ;AACf;AACA;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACA,WAAOL,QAAQ,CAACQ,GAAT,CAAa,mBAAb,EAAkCH,YAAlC,CAAP;AACH;AARsB,CAApB;AAWP,OAAO,IAAMI,UAAU,GAAG;AACtBL,EAAAA,IADsB,gBACjBM,KADiB,EACVC,IADU,EACJC,GADI,EACCC,GADD,EACM;AACxBP,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ,EAAmBC,IAAnB,EAAyBE,GAAzB;AACA,QAAIR,YAAY,GAAG,IAAIS,QAAJ,EAAnB;AACAT,IAAAA,YAAY,CAACU,GAAb,CAAiB,OAAjB,EAA0BL,KAA1B;AACAL,IAAAA,YAAY,CAACU,GAAb,CAAiB,YAAjB,EAA+BJ,IAA/B;AACAN,IAAAA,YAAY,CAACU,GAAb,CAAiB,cAAjB,EAAiCH,GAAjC;AACAP,IAAAA,YAAY,CAACU,GAAb,CAAiB,KAAjB,EAAwBF,GAAxB;AACA,WAAOb,QAAQ,CAACgB,IAAT,CAAc,mBAAd,EAAmCX,YAAnC,CAAP;AACH;AATqB,CAAnB;AAYP,OAAO,IAAMY,SAAS,GAAE;AACpBb,EAAAA,IADoB,gBACfC,YADe,EACF;AAClB;AACI;AACA;AACA;AACA;AACA,WAAOL,QAAQ,CAACgB,IAAT,CAAc,iBAAd,EAAiCX,YAAjC,CAAP;AACH;AARmB,CAAjB","sourcesContent":["import axios from 'axios'\nconst instance = axios.create({\n    baseURL: \"http://192.168.0.44:8081/\",\n});\n\nexport const submitWoImg = {\n    list(bodyFormData) {\n        // var bodyFormData = new FormData();\n        // bodyFormData.set('title', title)\n        // bodyFormData.set('noticeType', type)\n        // bodyFormData.set('tts', tts)\n        console.log(bodyFormData)\n        return instance.get('api/notice/insert', bodyFormData)\n    }\n}\n\nexport const submitWImg = {\n    list(title, type, img, tts) {\n        console.log(title, type, tts)\n        var bodyFormData = new FormData();\n        bodyFormData.set('title', title)\n        bodyFormData.set('noticeType', type)\n        bodyFormData.set('downloadFile', img)\n        bodyFormData.set('tts', tts)\n        return instance.post('api/notice/insert', bodyFormData)\n    }\n}\n\nexport const listsPage ={\n    list(bodyFormData){\n    // list(pageNum){\n        // const bodyFormData = new FormData\n        // bodyFormData.set(\"requestPage\", pageNum)\n        // // eslint-disable-next-line no-console\n        // console.log(\"num\", pageNum)\n        return instance.post(\"api/notice/list\", bodyFormData)\n    }\n}\n\n"]}]}